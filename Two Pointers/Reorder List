https://leetcode.com/problems/reorder-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(head==NULL)
        return;

        ListNode* slow=head;
        ListNode* fast=head;
        while(fast && fast->next){
            slow=slow->next;
            fast=fast->next->next;
        }

        ListNode* sec=slow->next;
        slow->next=nullptr;
        ListNode* prev=nullptr;
        while(sec){
            ListNode* curr=sec->next;
            sec->next=prev;
            prev=sec;
            sec=curr;
        }

        ListNode* first=head;
        sec=prev;
        while(sec){
            ListNode* t1=first->next;
            ListNode* t2=sec->next;
            first->next=sec;
            sec->next=t1;
            first=t1;
            sec=t2;
        }


    }
};

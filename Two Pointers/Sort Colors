https://leetcode.com/problems/sort-colors/description/

By counting number of ones,zeroes and twos:

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int czero=0,cone=0,ctwo=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==0)
            czero++;
            else if(nums[i]==1)
            cone++;
            else
            ctwo++;
        }

        for(int i=0;i<czero;i++)
        nums[i]=0;
        for(int i=czero;i<czero+cone;i++)
        nums[i]=1;
        for(int i=czero+cone;i<nums.size();i++)
        nums[i]=2;
    }
};


Using two pointer concept:

class Solution {
public:
    void sortColors(vector<int>& nums) {
        // i - for count of zeros
        // j - for array traversing
        // k - for count of two
        int i=0,j=0,k=nums.size()-1;
        while(j<=k)
        {
            if(nums[j]==0)
            {
                swap(nums[i],nums[j]);
                i++;
                j++;
            }
            else if(nums[j]==1)
            {
                j++;
            }
            else if(nums[j]==2)
            {
                swap(nums[j],nums[k]);
                k--;
            }
        }
    }
};

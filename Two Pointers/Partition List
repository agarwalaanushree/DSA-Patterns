https://leetcode.com/problems/partition-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* smlist=new ListNode(0,nullptr);
        ListNode* biglist=new ListNode(0,nullptr);
        ListNode* small=smlist;
        ListNode* big=biglist;
        while(head!=NULL)
        {
            if(head->val<x){
                small->next=head;
                small=small->next;
            }
            else{
                big->next=head;
                big=big->next;
            }
            head=head->next;
        }
        small->next=biglist->next;
        big->next=nullptr;

        ListNode* res=smlist->next;
        delete smlist;
        delete biglist;
        
        return res;
    }
};
